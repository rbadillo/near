package com.near.appusers.jdbi;

import java.util.List;

import org.skife.jdbi.v2.sqlobject.Bind;
import org.skife.jdbi.v2.sqlobject.BindBean;
import org.skife.jdbi.v2.sqlobject.SqlQuery;
import org.skife.jdbi.v2.sqlobject.SqlUpdate;
import org.skife.jdbi.v2.sqlobject.customizers.RegisterMapper;

import com.near.appusers.api.AppUser;
import com.near.appusers.mappers.AppUserMapper;

/**
 * This interface is used by JDBI to query information from the AppUsers table. 
 * TODO(zwkero): create RDS to contain this table. Define Migrations for this table.
 * 
 * @author zwkero
 *
 */
@RegisterMapper(AppUserMapper.class)
public interface AppUserDAO {
    
  /** Inserts a AppUser to the DB. The ID is auto generated by the DB when stored.*/
  @SqlUpdate("INSERT INTO AppUsers (name) VALUES (:name)")
  void insert(@Bind("name") String name);
  
  /** Inserts a AppUser to the DB. The ID is auto generated by the DB when stored.*/
  @SqlUpdate("INSERT INTO AppUsers (name) VALUES (:name)")
  void insert(@BindBean("appuser") AppUser appuser);
  
  /**  Queries all the people from the DB. Binding is done with AppUserMapper. */
  @SqlQuery("SELECT id, name, age FROM AppUsers")
  List<AppUser> getAllPeople();
  
  /**  Queries a single AppUser with the ID from the DB. Binding is done with AppUserMapper */
  @SqlQuery("SELECT id, name, age FROM AppUsers WHERE id = :id")
  AppUser findAppUserById(@Bind("id") String id);

  /** Close with no args is used to close the connection by DropWizard */  
  void close();
}
